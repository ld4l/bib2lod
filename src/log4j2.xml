<?xml version="1.0" encoding="UTF-8"?>
<!-- This configuration can be overridden by placing a file log4j2-test.xml in the same directory (src). -->
<!-- Status = level of internal log4j events to log to console. Set status to "trace" to troubleshoot log4j2. -->
<Configuration status="warn">
    <CustomLevels>
        <!-- 
            Between DEBUG and INFO - use for development.
            Declaring in config is not too convenient, since we have to call it
            in code as LOGGER.log(Level.getLevel("DEV"), "message"). Better to
            define in code with a method LOGGER.dev();
        -->
        <CustomLevel name="DEV" intLevel="450" />
    </CustomLevels> 
    <Appenders>
        <RollingFile name="RollingFile" fileName="log/bib2lod.log"
            filePattern="log/$${date:yyyy-MM-dd}/bib2lod-%d{yyyy-MM-dd-HHmmss}.log">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
            <Policies>
                <OnStartupTriggeringPolicy />
            </Policies>
        </RollingFile> 
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
    </Appenders>
    <Loggers>
        <Root level="error">
            <AppenderRef ref="RollingFile"/>
            <AppenderRef ref="Console"/>
        </Root>
        <!-- Sample loggers -->
        <!--
        <Logger name="org.ld4l.bib2lod.rdfconversion.bibframeconversion" level="debug">
            <AppenderRef ref="Console"/>
        </Logger>
        -->
        <!--
        <Logger name="org.ld4l.bib2lod.rdfconversion.resourcededuping.BfAuthorityDeduper" level="debug">
            <AppenderRef ref="Console"/>
        </Logger>
        -->
        <!--
        <Logger name="org.ld4l.bib2lod.rdfconversion.RdfProcessor" level="trace">
            <AppenderRef ref="Console"/>
        </Logger>
        -->
    </Loggers>
</Configuration>

